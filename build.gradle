plugins {
    id 'java'
}

group 'io.confluent'
version '0.0.1'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {

    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    testImplementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    compileOnly group: 'org.apache.kafka', name: 'connect-api', version: '2.6.0'

    implementation group: 'com.marklogic', name: 'marklogic-client-api', version: '5.4.0'
    implementation group: 'com.marklogic', name: 'marklogic-xcc', version: '10.0.6.2'

}

test {
    useJUnitPlatform()
}

/* Previously this built a usable Jar - although there were no dependencies included...
task buildConnectorJar(type: Jar) {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
} */

task buildConnectorJar(type: Jar) {
    group = 'MarkLogic Souce Connector'
    dependsOn ordered(":clean", ":assemble")
    dependsOn = [clean,assemble,jar]
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

task copyConnectorJar(type: Copy) {
    group = 'MarkLogic Souce Connector'
    dependsOn = [buildConnectorJar]
    description = "Copies the jar into the Connector directory"
    from "build/libs"
    into System.getProperty("user.home")+"/connectors/marklogic-source-connector/"
}

task clearConnectorDirectory(type: Delete) {
    group = 'MarkLogic Souce Connector'
    delete System.getProperty("user.home")+"/connectors/marklogic-source-connector/"
}

def ordered(String... dependencyPaths) {
    def dependencies = dependencyPaths.collect { tasks.getByPath(it) }
    for (int i = 0; i < dependencies.size() - 1; i++) {
        dependencies[i + 1].mustRunAfter(dependencies[i])
    }
    return dependencies
}