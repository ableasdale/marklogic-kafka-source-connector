plugins {
    id 'java'
}

group 'io.confluent'
version '0.0.1e'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    compileOnly group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    compileOnly group: 'io.github.rburgst', name: 'okhttp-digest', version: '2.5'
    compileOnly group: 'org.apache.kafka', name: 'connect-api', version: '2.6.0'

    implementation group: 'com.marklogic', name: 'marklogic-client-api', version: '5.4.0'
    implementation group: 'com.marklogic', name: 'marklogic-xcc', version: '10.0.6.2'

}

test {
    useJUnitPlatform()
}

/* Previously this built a usable Jar - although there were no dependencies included...
task buildConnectorJar(type: Jar) {
    baseName = 'marklogic-kafka-source-connector'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
} */

task buildConnectorJar(type: Jar) {
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}